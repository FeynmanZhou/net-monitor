name: Main

on:
  pull_request:
    paths:
      - ".github/workflows/**"
      - "scripts/**"
  release:
    types: [released, published]
  workflow_dispatch:

jobs:
  acr:
    name: "Registry Target:: ACR"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    # strategy:
    #   matrix:
    #     include:
    #       - app: "net-monitor"
    #         framework: "bash"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install tooling (ORAS, Notation, Msft SBOM tool, Trivy)
        shell: bash
        run: |
          ./scripts/oras-install.sh
          ./scripts/msft-sbom-install.sh
          # ./scripts/trivy-install.sh

      - name: Set ACR registry and repository variables
        shell: bash
        env:
          ACR_NAME: ${{ secrets.AZURE_ACR_NAME }}
          APP_NAME: 'net-monitor'
        run: |
          echo "acr_reg=${ACR_NAME}.azurecr.io" >> $GITHUB_ENV
          echo "acr_repo=github/${APP_NAME}" >> $GITHUB_ENV

      - name: Extract tag for image
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea # v4.1.1
        with:
          images: ${{ env.acr_reg }}/${{ env.acr_repo }}
          tags: |
            type=sha,prefix=

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # - name: Retrieve AKV key cert pair.
      #   run: ./scripts/akv-private-key.sh
      #   shell: bash
      #   env:
      #     SECRET_ID: ${{ secrets.CERT_SECRET_URI }}

      # - name: Build image and push with Docker
      #   run: ./scripts/image-build-push.sh
      #   env:
      #     # PROJECT_CONTEXT: ./src/${{ matrix.app }}
      #     ACR_NAME: ${{ secrets.AZURE_ACR_NAME }}
      #     IMAGE: ${{ steps.meta.outputs.tags }}
      #     REGISTRY: ${{ env.acr_reg }}

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.acr_reg }}
          username: ${{ secrets.AZURE_NET_MONITOR_SP }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}
      - name: Build and push
        uses: docker/build-push-action@v3
        continue-on-error: true
        with:
          context: .
          push: true
          tags: ${{ env.acr_reg }}/${{ env.acr_repo }}:temp
      - name: Setup Notation with azure-kv plugin
        uses: Duffney/setup-notation@v0.1.0
        continue-on-error: true
        with:
          version: '0.11.0-alpha.4'
          key_name: 'wabbit-networks-io'
          certificate_key_id: ${{ secrets.NOTATION_KEY_ID }}
          plugin_name: 'notation-azure-kv'
          plugin_version: '0.4.0-alpha.4'
      - name: Sign Image
        uses: ./.github/actions/signing
        with:
          artifact: ${{ env.acr_reg }}/${{ env.acr_repo }}@${{env.IMAGE_DIGEST}}
          acr_name: ${{ secrets.AZURE_ACR_NAME }}
          manifest_type: application/vnd.docker.distribution.manifest.v2+json
          notation_key_id: $${{ secrets.NOTATION_KEY_ID }}
      - name: Generate and push SBOM
        uses: ./.github/actions/generate-and-push-sbom-acr
        continue-on-error: true
        with:
          app_name: 'net-monitor'
          # framework: ${{ matrix.framework }}
          acr_registry: ${{ env.acr_reg }}
          acr_repo: ${{ env.acr_repo }}
          subject_img: ${{ env.acr_reg }}/${{ env.acr_repo }}:temp
          acr_name: ${{ secrets.AZURE_ACR_NAME }}

      # - name: Generate SBOM
      #   continue-on-error: true
      #   run: |
      #     curl -Lo $RUNNER_TEMP/sbom-tool https://github.com/microsoft/sbom-tool/releases/latest/download/sbom-tool-linux-x64
      #     chmod +x $RUNNER_TEMP/sbom-tool
      #     $RUNNER_TEMP/sbom-tool generate -b . -bc . -pn net-monitor -pv $GITHUB_REF_NAME -ps 'Wabbit Networks' -nsb https://wabbit-networks.io -V Verbose
      #     cp ${{ github.workspace }}/_manifest/spdx_2.2/manifest.spdx.json ${{ github.workspace }}/net-monitor.spdx.json

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: '${{ env.acr_reg }}/${{ env.acr_repo }}:temp'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Push vulnerability scan
        run: ./scripts/oras-attach.sh
        continue-on-error: true
        shell: bash
        env:
          ACR_NAME: ${{ secrets.AZURE_ACR_NAME }}
          IMAGE: ${{ env.acr_reg }}/${{ env.acr_repo }}:temp
          ARTIFACT: trivy-results.sarif
          MEDIA_TYPE: application/sarif+json

      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: 'trivy-results.sarif'

      # - name: Vulnerability Scan (Trivy) and Push to ACR
      #   uses: ./.github/actions/vulnerability-scanning
      #   with:
      #     acr_registry: ${{ env.acr_reg }}
      #     acr_repo: ${{ env.acr_repo }}
      #     acr_name: ${{ secrets.AZURE_ACR_NAME }}
      #     app_name: 'net-monitor'
      #     subject_img: ${{ env.acr_reg }}/${{ env.acr_repo }}:temp


      - name: Sign SBOM
        uses: ./.github/actions/signing
        continue-on-error: true
        with:
          artifact: ${{ env.acr_reg }}/${{ env.acr_repo }}@${{env.PUSHED_DIGEST}}
          acr_name: ${{ secrets.AZURE_ACR_NAME }}
          manifest_type: application/vnd.cncf.oras.artifact.manifest.v1+json
          notation_key_id: $${{ secrets.NOTATION_KEY_ID }}
      - name: Sign Vulnerability Scan
        uses: ./.github/actions/signing
        with:
          artifact: ${{ env.acr_reg }}/${{ env.acr_repo }}@${{env.PUSHED_DIGEST}}
          acr_name: ${{ secrets.AZURE_ACR_NAME }}
          manifest_type: application/vnd.cncf.oras.artifact.manifest.v1+json
          notation_key_id: $${{ secrets.NOTATION_KEY_ID }}
      - name: Log out
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear
